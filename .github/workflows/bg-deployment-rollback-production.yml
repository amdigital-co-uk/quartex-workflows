name: Rollback production
permissions:
  id-token: write
  contents: read

on:
  workflow_call:
    inputs:
        ECR_REGION_1:
            type: string
            default: us-east-1
        NODE_VERSION:
            type: number
            default: 18
        AC_IMAGE_VERSION:
                type: string
        AC_SERVICE_NAME:
                type: string
        AC_LISTENER_PORT:
            type: number
            default: 80
        AC_REGION:
            type: string
            default: us-east-1
        AC_CLUSTER:
            type: string
        AC_PRODUCTION_URL:
            type: string
        AC_STAGING_URL:
            type: string
        AC_PRODUCTION_HEALTH_CHECK_URL:
            type: string

    secrets:
        AWS_ROLE_ARN:
            required: true

jobs:
  update-rollback:
    name: Rollback production in case of failure
    env:
        AC_IMAGE_VERSION:  ${{ inputs.AC_IMAGE_VERSION }}
        AC_SERVICE_NAME:  ${{ inputs.AC_SERVICE_NAME }}
        AC_LISTENER_PORT:  ${{ inputs.AC_LISTENER_PORT }}
        AC_REGION:  ${{ inputs.AC_REGION }}
        AC_CLUSTER:  ${{ inputs.AC_CLUSTER }}
        AC_PRODUCTION_URL:  ${{ inputs.AC_PRODUCTION_URL }}
        AC_STAGING_URL:  ${{ inputs.AC_STAGING_URL }}
        AC_PRODUCTION_HEALTH_CHECK_URL:  ${{ inputs.AC_PRODUCTION_HEALTH_CHECK_URL }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Checkout tools repo
        uses: actions/checkout@v3
        with:
          repository: amdigital-co-uk/quartex-workflows
          ref: feature/blue-green-deployment-workflow
          path: common-build-tools

      - name: Configure AWS credentials (ECR_REGION_1)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-duration-seconds: 900
          aws-region: ${{ inputs.ECR_REGION_1 }}

      - name: Setup Node and NPM
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.NODE_VERSION }}

      - name: Build deploy-tooling
        working-directory: common-build-tools/deploy-tooling
        run: |
          npm install
          npm run build

      - name: Gather version info
        id: info
        working-directory:  common-build-tools/deploy-tooling
        run: |
            npm run --silent status > status.json
            production_version=$(cat status.json | jq -r .production.version)
            staging_version=$(cat status.json | jq -r .staging.version)
            echo "production_version=$production_version" >> $GITHUB_OUTPUT
            echo "staging_version=$staging_version" >> $GITHUB_OUTPUT
            echo "deploy_version=$AC_IMAGE_VERSION" >> $GITHUB_OUTPUT
            cat $GITHUB_OUTPUT

      - name: Rollback production in case of failure
        working-directory: common-build-tools/deploy-tooling
        run: |
          npm run rollback $production_version
